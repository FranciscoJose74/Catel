<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
    <CodeSnippet Format="1.0.0">
        <Header>
            <Title>Define a command linked to a validation summary for a view model class</Title>
            <Shortcut>vmcommandwithvalidationsummary</Shortcut>
            <Description>Code snippet for a command linked to a validation summary for a view model class</Description>
            <Author>CatenaLogic</Author>
            <SnippetTypes>
                <SnippetType>Expansion</SnippetType>
            </SnippetTypes>
        </Header>
        <Snippet>
            <Declarations>
                <Literal>
                    <ID>name</ID>
                    <ToolTip>Name of the command</ToolTip>
                    <Default>name</Default>
                </Literal>			
                <Literal>
                    <ID>type</ID>
                    <ToolTip>Type of the property</ToolTip>
                    <Default>type</Default>
                </Literal>
               <Literal>
                    <ID>summary</ID>
                    <ToolTip>Name of the summary</ToolTip>
                    <Default>summary</Default>
                </Literal>					
               <Literal>
                    <ID>tag</ID>
                    <ToolTip>Tag of the validation</ToolTip>
                    <Default>tag</Default>
                </Literal>				
            </Declarations>
            <Code Language="csharp">
                <![CDATA[/// <summary>
/// Gets the $name$ command.
/// </summary>
public Command $name$ { get; private set; }

// TODO: Move code below to constructor
$name$ = CommandHelper.CreateCommand(On$name$Execute, () => $summary$ValidationSummary);
// TODO: Move code above to constructor

/// <summary>
/// Method to invoke when the $name$ command is executed.
/// </summary>
private void On$name$Execute()
{
    // TODO: Handle command logic here
}

/// <summary>
/// Validation summary for validation with the tag '$tag$' that is automatically updated.
/// </summary>
[ValidationToViewModel(Tag = "$tag$")]
public IValidationSummary $summary$ValidationSummary { get; set; }]]>
            </Code>
        </Snippet>
    </CodeSnippet>
</CodeSnippets>
