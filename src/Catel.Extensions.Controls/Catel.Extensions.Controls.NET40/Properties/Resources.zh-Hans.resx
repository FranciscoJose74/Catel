<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApprovementCaption" xml:space="preserve">
    <value>批准</value>
  </data>
  <data name="ChoiceSpecify" xml:space="preserve">
    <value>指定</value>
  </data>
  <data name="CommandBrowseForFileBrowse" xml:space="preserve">
    <value>浏览文件...</value>
  </data>
  <data name="CommandDataAdd" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="CommandDataAddAll" xml:space="preserve">
    <value>全部添加</value>
  </data>
  <data name="CommandDataEdit" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="CommandDataRemove" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="CommandDataRemoveAll" xml:space="preserve">
    <value>全部删除</value>
  </data>
  <data name="CommandDataRevert" xml:space="preserve">
    <value>撤销</value>
    <comment>CommandDataRevert description</comment>
  </data>
  <data name="CommandDataSort" xml:space="preserve">
    <value>排序</value>
  </data>
  <data name="CommandDataSubmit" xml:space="preserve">
    <value>提交</value>
  </data>
  <data name="CommandDataSynchronize" xml:space="preserve">
    <value>同步</value>
  </data>
  <data name="CommandNavigateBack" xml:space="preserve">
    <value>上一步</value>
  </data>
  <data name="CommandNavigateFirst" xml:space="preserve">
    <value>由此浏览</value>
  </data>
  <data name="CommandNavigateForward" xml:space="preserve">
    <value>下一步</value>
  </data>
  <data name="CommandNavigateGo" xml:space="preserve">
    <value>前进到</value>
  </data>
  <data name="CommandNavigateHome" xml:space="preserve">
    <value>主页</value>
  </data>
  <data name="CommandNavigateLast" xml:space="preserve">
    <value>最后一项</value>
  </data>
  <data name="CommandNavigateNext" xml:space="preserve">
    <value>下一个项</value>
  </data>
  <data name="CommandNavigateOpenLinkUrl" xml:space="preserve">
    <value>打开链接</value>
  </data>
  <data name="CommandNavigatePrevious" xml:space="preserve">
    <value>上一个项</value>
  </data>
  <data name="CommandTipOfTheDayLaunchTipEditor" xml:space="preserve">
    <value>启动窍门编辑器</value>
  </data>
  <data name="CommandTipOfTheDayPreview" xml:space="preserve">
    <value>预览</value>
  </data>
  <data name="CommandTipOfTheDayShowNextTip" xml:space="preserve">
    <value>下一个窍门</value>
  </data>
  <data name="CommandWindowApply" xml:space="preserve">
    <value>应用</value>
  </data>
  <data name="CommandWindowCancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="CommandWindowClear" xml:space="preserve">
    <value>清除</value>
  </data>
  <data name="CommandWindowClose" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="CommandWindowCopyToClipboard" xml:space="preserve">
    <value>拷贝到剪贴板</value>
  </data>
  <data name="CommandWindowOK" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="CommandWindowRefresh" xml:space="preserve">
    <value>刷新</value>
  </data>
  <data name="CommandWindowResetLayout" xml:space="preserve">
    <value>重置布局</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>注释</value>
  </data>
  <data name="ConfirmationTitle" xml:space="preserve">
    <value>确定吗？</value>
  </data>
  <data name="ConfirmCloseTipOfTheDayEditor" xml:space="preserve">
    <value>确定关闭编辑器？

所有未保存的数据都会丢失。如果希望保留修改，确保关闭编辑器之前先保存修改。</value>
  </data>
  <data name="Empty" xml:space="preserve">
    <value>空白</value>
  </data>
  <data name="Modify" xml:space="preserve">
    <value>修改</value>
  </data>
  <data name="MultiLineInputWindowExplanation" xml:space="preserve">
    <value>修改下面的文本</value>
  </data>
  <data name="MultipleChoiceWindowTitle" xml:space="preserve">
    <value>请选择</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="SaveHelpMappingFailed" xml:space="preserve">
    <value>保存帮助映射文件时发生错误</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="MultiLineInputWindowChangeText" xml:space="preserve">
    <value>修改文本</value>
  </data>
</root>