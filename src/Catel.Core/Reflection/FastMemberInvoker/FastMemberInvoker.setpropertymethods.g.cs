//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was generated by a tool. 
// 
// Changes to this file may cause incorrect behavior and will be lost if 
// the code is regenerated. 
// </auto-generated> 
//------------------------------------------------------------------------------

namespace Catel.Reflection
{
	using System;

	public partial class FastMemberInvoker<TEntity>
	{
		public bool SetPropertyValue(TEntity entity, string propertyName, Object value)
		{
			if (_objectPropertySettersCache.TryGetValue(propertyName, out Action<TEntity, Object> setter))
			{
				setter(entity, value);

				return true;
			}

			return false;
		}

		public bool SetPropertyValue(TEntity entity, string propertyName, Boolean value)
		{
			if (_booleanPropertySettersCache.TryGetValue(propertyName, out Action<TEntity, Boolean> setter))
			{
				setter(entity, value);

				return true;
			}

			return false;
		}

		public bool SetPropertyValue(TEntity entity, string propertyName, Char value)
		{
			if (_charPropertySettersCache.TryGetValue(propertyName, out Action<TEntity, Char> setter))
			{
				setter(entity, value);

				return true;
			}

			return false;
		}

		public bool SetPropertyValue(TEntity entity, string propertyName, SByte value)
		{
			if (_sbytePropertySettersCache.TryGetValue(propertyName, out Action<TEntity, SByte> setter))
			{
				setter(entity, value);

				return true;
			}

			return false;
		}

		public bool SetPropertyValue(TEntity entity, string propertyName, Byte value)
		{
			if (_bytePropertySettersCache.TryGetValue(propertyName, out Action<TEntity, Byte> setter))
			{
				setter(entity, value);

				return true;
			}

			return false;
		}

		public bool SetPropertyValue(TEntity entity, string propertyName, Int16 value)
		{
			if (_int16PropertySettersCache.TryGetValue(propertyName, out Action<TEntity, Int16> setter))
			{
				setter(entity, value);

				return true;
			}

			return false;
		}

		public bool SetPropertyValue(TEntity entity, string propertyName, UInt16 value)
		{
			if (_uint16PropertySettersCache.TryGetValue(propertyName, out Action<TEntity, UInt16> setter))
			{
				setter(entity, value);

				return true;
			}

			return false;
		}

		public bool SetPropertyValue(TEntity entity, string propertyName, Int32 value)
		{
			if (_int32PropertySettersCache.TryGetValue(propertyName, out Action<TEntity, Int32> setter))
			{
				setter(entity, value);

				return true;
			}

			return false;
		}

		public bool SetPropertyValue(TEntity entity, string propertyName, UInt32 value)
		{
			if (_uint32PropertySettersCache.TryGetValue(propertyName, out Action<TEntity, UInt32> setter))
			{
				setter(entity, value);

				return true;
			}

			return false;
		}

		public bool SetPropertyValue(TEntity entity, string propertyName, Int64 value)
		{
			if (_int64PropertySettersCache.TryGetValue(propertyName, out Action<TEntity, Int64> setter))
			{
				setter(entity, value);

				return true;
			}

			return false;
		}

		public bool SetPropertyValue(TEntity entity, string propertyName, UInt64 value)
		{
			if (_uint64PropertySettersCache.TryGetValue(propertyName, out Action<TEntity, UInt64> setter))
			{
				setter(entity, value);

				return true;
			}

			return false;
		}

		public bool SetPropertyValue(TEntity entity, string propertyName, Single value)
		{
			if (_singlePropertySettersCache.TryGetValue(propertyName, out Action<TEntity, Single> setter))
			{
				setter(entity, value);

				return true;
			}

			return false;
		}

		public bool SetPropertyValue(TEntity entity, string propertyName, Double value)
		{
			if (_doublePropertySettersCache.TryGetValue(propertyName, out Action<TEntity, Double> setter))
			{
				setter(entity, value);

				return true;
			}

			return false;
		}

		public bool SetPropertyValue(TEntity entity, string propertyName, Decimal value)
		{
			if (_decimalPropertySettersCache.TryGetValue(propertyName, out Action<TEntity, Decimal> setter))
			{
				setter(entity, value);

				return true;
			}

			return false;
		}

		public bool SetPropertyValue(TEntity entity, string propertyName, DateTime value)
		{
			if (_datetimePropertySettersCache.TryGetValue(propertyName, out Action<TEntity, DateTime> setter))
			{
				setter(entity, value);

				return true;
			}

			return false;
		}

		public bool SetPropertyValue(TEntity entity, string propertyName, String value)
		{
			if (_stringPropertySettersCache.TryGetValue(propertyName, out Action<TEntity, String> setter))
			{
				setter(entity, value);

				return true;
			}

			return false;
		}

	}
}